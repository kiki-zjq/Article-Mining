webpackJsonp([1],{"2Hcf":function(e,t){},"5W1q":function(e,t){},"74Mz":function(e,t){},FIkx:function(e,t,a){e.exports=a.p+"static/img/simulator.7445678.png"},GGWt:function(e,t,a){e.exports=a.p+"static/img/logo.d6041e1.png"},Hc7h:function(e,t){},J1Xs:function(e,t){},NHnr:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a("7+uW"),i={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"header"},[t("img",{attrs:{src:a("GGWt"),height:"150px",width:"225px/"}}),this._v(" "),t("div",{staticClass:"welcome"},[this._v("\n        Welcome to SCAN-ATAC"),t("br"),this._v(" "),t("span",{staticStyle:{"font-size":"20px",color:"#1B3D6D"}},[this._v("Single-cell analysis tool for ATAC-seq")])])])}]};var s=a("VU/8")(null,i,!1,function(e){a("ub9N")},"data-v-be66807c",null).exports,r=(a("5W1q"),{render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var e=this.$createElement,t=this._self._c||e;return t("div",[t("div",{staticClass:"copyright"},[t("div",{staticClass:"divider"}),this._v(" "),t("i",{staticClass:"fa fa-copyright fa-1x",attrs:{"aria-hidden":"true"}}),t("span",{staticClass:"team-name"},[this._v("SCAN-ATAC GPU Simulator")])])])}]});var l={methods:{handleClick:function(e){switch(console.log(e),e){case 1:this.$router.push("./");break;case 2:this.$router.push("./Install");break;case 3:this.$router.push("./Document");break;case 4:this.$router.push("./Example");break;case 5:this.$router.push("./Simulator");break;case 6:this.$router.push("./Contact")}}}},o={render:function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"menu-part"},[a("ul",{staticClass:"nav"},[a("li",[a("a",{attrs:{href:"javascript:void(0)"},on:{click:function(t){return e.handleClick(1)}}},[e._v("Home")])]),e._v(" "),a("li",[a("a",{attrs:{href:"javascript:void(0)"},on:{click:function(t){return e.handleClick(2)}}},[e._v("Installation")])]),e._v(" "),a("li",[a("a",{attrs:{href:"javascript:void(0)"},on:{click:function(t){return e.handleClick(3)}}},[e._v("Documentation")])]),e._v(" "),a("li",[a("a",{attrs:{href:"javascript:void(0)"},on:{click:function(t){return e.handleClick(4)}}},[e._v("Example")])]),e._v(" "),a("li",[a("a",{attrs:{href:"javascript:void(0)"},on:{click:function(t){return e.handleClick(5)}}},[e._v("Simulator")])]),e._v(" "),a("li",[a("a",{attrs:{href:"javascript:void(0)"},on:{click:function(t){return e.handleClick(6)}}},[e._v("Contact")])])])])},staticRenderFns:[]};var c={name:"App",data:function(){return{}},components:{FooterPart:a("VU/8")({},r,!1,function(e){a("2Hcf")},"data-v-0af55a40",null).exports,HeaderPart:s,Menu:a("VU/8")(l,o,!1,function(e){a("jxV2")},"data-v-19a0aeec",null).exports}},_={render:function(){var e=this.$createElement,t=this._self._c||e;return t("div",{attrs:{id:"app"}},[t("HeaderPart",{attrs:{id:"header-part"}}),this._v(" "),t("Menu"),this._v(" "),t("div",{attrs:{id:"main-part"}},[t("router-view")],1),this._v(" "),t("div",{attrs:{id:"footer-part"}},[t("FooterPart")],1)],1)},staticRenderFns:[]};var p=a("VU/8")(c,_,!1,function(e){a("74Mz")},null,null).exports,v=a("/ocq"),d={render:function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"homepage-block"},[t("div",{staticClass:"title"},[this._v("\n        Homepage\n    ")]),this._v(" "),t("el-divider")],1)},staticRenderFns:[]};var m=a("VU/8")(null,d,!1,function(e){a("Hc7h")},"data-v-764e8ea7",null).exports,u={render:function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"download-block"},[a("div",{staticClass:"title"},[e._v("\n        Installation\n    ")]),e._v(" "),a("el-divider"),e._v(" "),a("div",{staticClass:"sub-title"},[e._v("\n        Installation Guide\n   ")]),e._v(" "),e._m(0),e._v(" "),a("el-divider"),e._v(" "),a("div",{staticClass:"sub-title"},[e._v("\n        Source code download\n    ")]),e._v(" "),a("i",{staticStyle:{"padding-left":"2em",color:"#b4b4b4"}},[e._v("(Click to download)")]),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),a("el-divider"),e._v(" "),a("div",{staticClass:"sub-title"},[e._v("\n        Using Directions\n   ")]),e._v(" "),a("p",{staticClass:"function-name"},[e._v("SASample")]),e._v(" "),e._m(3),e._v(" "),a("br"),e._v(" "),a("p",{staticClass:"function-name"},[e._v("SASample_function")]),e._v(" "),e._m(4)],1)},staticRenderFns:[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"guide-block"},[a("p",{staticStyle:{"font-weight":"bold"}},[e._v("Install:")]),e._v(" "),a("ol",[a("li",[e._v("pip install numpy")]),e._v(" "),a("li",[e._v("pip install h5py")]),e._v(" "),a("li",[e._v("pip install pandas")]),e._v(" "),a("li",[e._v("pip install SASample")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",{staticClass:"downloader"},[t("a",{attrs:{href:"./static/code/SASample.py",download:"SASample.py"}},[this._v("SASample")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",{staticClass:"downloader"},[t("a",{attrs:{href:"./static/code/SASample_functions.py",download:"SASample_functions.py"}},[this._v("SASample_function")])])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"guide-block"},[a("p",{staticStyle:{"font-weight":"bold"}},[e._v("Using Directions:")]),e._v(" "),a("ol",[a("li",[e._v("Initialize a SASample Class"),a("br"),a("b",[e._v("E.g. sample = SASample(bg_path, bg_intersect_path, peak_path, peak_intersect_path)")])]),e._v(" "),a("li",[e._v("Set proper parameter for this Class, like signal2noise, fragment_number, saving_path, etc. Or just use the default value."),a("br"),a("b",[e._v("E.g. sample.set_cores(5)")])]),e._v(" "),a("li",[e._v("Use run method to start sample process "),a("br"),a("b",[e._v("E.g. sample.run()")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"guide-block"},[t("p",{staticStyle:{"font-weight":"bold"}},[this._v("Using Directions:")]),this._v(" "),t("div",{staticStyle:{"margin-left":"2em"}},[this._v("\n            Simply use the run() method to start sample process."),t("br"),this._v("\n            Please notice that the data paths are required."),t("br"),this._v("\n            Some other parameters is optional. If you want to change them, please change them in run() method."),t("br"),this._v("\n            Or they will run by deafult value.\n        ")])])}]};var h=a("VU/8")(null,u,!1,function(e){a("Sowx")},"data-v-0a6ff308",null).exports,f={render:function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"document-block"},[a("div",{staticClass:"title"},[e._v("\n            Documentation\n        ")]),e._v(" "),a("el-divider"),e._v(" "),a("div",{staticClass:"sub-title"},[e._v("\n            Introduction\n        ")]),e._v(" "),a("p",{staticStyle:{"margin-left":"2em"}},[e._v("\n            This file provide a sample way for multiple cores CPU. It could automatically load the file and calculate the sample and\nstore them in h5 format file.\n        ")]),e._v(" "),a("el-divider"),e._v(" "),a("div",{staticClass:"sub-title"},[e._v("\n            Module List\n        ")]),e._v(" "),e._m(0),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),e._m(7),e._v(" "),e._m(8),e._v(" "),e._m(9),e._v(" "),a("el-divider"),e._v(" "),a("div",{staticClass:"sub-title"},[e._v("\n            Function Details\n        ")]),e._v(" "),e._m(10),e._v(" "),e._m(11),e._v(" "),e._m(12),e._v(" "),e._m(13),e._v(" "),e._m(14),e._v(" "),e._m(15),e._v(" "),e._m(16),e._v(" "),a("el-divider"),e._v(" "),a("div",{staticClass:"sub-title"},[e._v("\n            Experimental Results\n        ")]),e._v(" "),a("div",{staticClass:"table",staticStyle:{margin:"10px auto",width:"90%"}},[a("el-table",{staticStyle:{width:"100%"},attrs:{data:e.tableData,stripe:""}},[a("el-table-column",{attrs:{prop:"core",label:"Number of cores",width:"230"}}),e._v(" "),a("el-table-column",{attrs:{prop:"total",label:"Total number",width:"230"}}),e._v(" "),a("el-table-column",{attrs:{prop:"sample",label:"Sampling size",width:"230"}}),e._v(" "),a("el-table-column",{attrs:{prop:"time",label:"time"}})],1)],1)],1)},staticRenderFns:[function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("span",{staticClass:"module-name"},[this._v("heapq")]),this._v(" -- Elementary package provided by python3.x to implement the data structure of heap and relevant methods.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("span",{staticClass:"module-name"},[this._v("multiprocessing")]),this._v(" -- Elementary package provided by python 3.x to support the multi-core feature.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("span",{staticClass:"module-name"},[this._v("math")]),this._v(" -- Elementary math package supporting some calculation including pow, log, exp and so on.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("span",{staticClass:"module-name"},[this._v("random ")]),this._v(" -- Used to generate random number, including seed(used to set random seed), uniform and randint.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("span",{staticClass:"module-name"},[this._v("numpy ")]),this._v(" -- Used in sample_int_expj to store and process probability data.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("span",{staticClass:"module-name"},[this._v("time ")]),this._v(" -- Used to record time.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("span",{staticClass:"module-name"},[this._v("sys ")]),this._v(" -- Used exit function to exit while error happens.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("span",{staticClass:"module-name"},[this._v("pandas ")]),this._v(" -- Used to read tsv data and generate data list.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("span",{staticClass:"module-name"},[this._v("h5py  ")]),this._v(" -- Used to store the data in h5 format.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("span",{staticClass:"module-name"},[this._v("os ")]),this._v(" -- Elementary process of operating system.")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"code-block"},[a("span",{staticClass:"function-name"},[e._v("check_args(n, size, prob)")]),e._v(" "),a("span",{staticClass:"function-description"},[e._v("-- Check whether size is less than n and whether n is equal to the length of prob.")]),e._v(" "),a("br"),e._v(" "),a("p",[e._v("@param n: The number of all the zones in a tissue.")]),e._v(" "),a("p",[e._v("@param size: The number of how many zones we want to sampled out.")]),e._v(" "),a("p",[e._v("@param prob: The probabilities for every zone in a numpy(float32) format.")])])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"code-block"},[a("span",{staticClass:"function-name"},[e._v("sample_int_expj(n, size, prob)")]),e._v(" "),a("span",{staticClass:"function-description"},[e._v("-- Sampling will be performed according to the weight of each member of the population.")]),e._v(" "),a("br"),e._v(" "),a("p",[e._v("@param n: The number of all the zones in a tissue.")]),e._v(" "),a("p",[e._v("@param size: The number of how many zones we want to sampled out.")]),e._v(" "),a("p",[e._v("@param prob: The probabilities for every zone in a numpy(float32) format.")]),e._v(" "),a("p",[e._v("@return List including the weighted sample position.")])])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"code-block"},[a("span",{staticClass:"function-name"},[e._v("reading_file(count_file_path, intersect_file_path)")]),e._v(" "),a("span",{staticClass:"function-description"},[e._v("-- Reading data from peak_file_path and intersect_file_path, and format them in specific format.")]),e._v(" "),a("br"),e._v(" "),a("p",[e._v("@param count_file_path: The path for counting file")]),e._v(" "),a("p",[e._v("@param intersect_file_path: The path for intersect path")]),e._v(" "),a("p",[e._v("@return Count File Data, Intersect File Data, Intersect Dictionary Data")])])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"code-block"},[a("span",{staticClass:"function-name"},[e._v("run(bg_path, bg_intersect_path, peak_path, peak_intersect_path, cell_number, fragment_number=1000, frag_num_var=1,max_threshold=2000, min_threshold=500, signal2noise=0.5, core_number=1)")]),e._v(" "),a("br"),e._v(" "),a("p",[e._v("@param bg_path: background counting file path")]),e._v(" "),a("p",[e._v("@param bg_intersect_path: background intersect file path")]),e._v(" "),a("p",[e._v("@param peak_path: peak counting file path")]),e._v(" "),a("p",[e._v("@param peak_intersect_path: peak intersect file path")]),e._v(" "),a("p",[e._v("@param cell_number: How many cells you wnat to sample from a tissue")]),e._v(" "),a("p",[e._v("@param fragment_number: The average value of fragment number for one cell. Default value is 1000")]),e._v(" "),a("p",[e._v("@param frag_num_var: The variance for fragment number's value. Default value is 1")]),e._v(" "),a("p",[e._v("@param max_threshold: The maximum threshold for fragment number. Default value is 2000")]),e._v(" "),a("p",[e._v("@param min_threshold: The minimum threshold for fragment number. Default value is 500")]),e._v(" "),a("p",[e._v("@param signal2noise: The signal to noise ratio. Default value is 0.5")]),e._v(" "),a("p",[e._v("@param core_number: The CPU core number you want to use. Default value is 1")])])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"code-block"},[a("span",{staticClass:"function-name"},[e._v('first_sample(data, intersect_data, dictionary, size, order, t="normal")')]),e._v(" "),a("span",{staticClass:"function-description"},[e._v("-- Read data, process data, pass them into sample_int_expjs and return results.")]),e._v(" "),a("br"),e._v(" "),a("p",[e._v("@param data: Counting Data. Generated by reading_file().")]),e._v(" "),a("p",[e._v("@param intersect_data: Intersect Data. Generated by reading_file().")]),e._v(" "),a("p",[e._v("@param dictionary: Intersect Data Dictionary. Generated by reading_file().")]),e._v(" "),a("p",[e._v("@param size: The number of zones you want to sample from all the zones.")]),e._v(" "),a("p",[e._v("@param order: The order of this cell")]),e._v(" "),a("p",[e._v("@param t: The type of this sample, e.g. Peak Data, Background Data, etc. Default Value is normal.")])])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"code-block"},[a("span",{staticClass:"function-name"},[e._v('second_sample(data, dictionary, sample_name, order, t="normal")')]),e._v(" "),a("span",{staticClass:"function-description"},[e._v("-- Read data, process data, conduct the second step sample, return the result.")]),e._v(" "),a("br"),e._v(" "),a("p",[e._v("@param data: Intersect Data. Passed by first_sample")]),e._v(" "),a("p",[e._v("@param dictionary: Intersect Dictionary Data. Passed by fisrt_sample.")]),e._v(" "),a("p",[e._v("@param sample_name: The sample name for all the sampled zones.")]),e._v(" "),a("p",[e._v("@param order: The order of this cell")]),e._v(" "),a("p",[e._v("@param t: The type of this sample, e.g. Peak Data, Background Data, etc. Default Value is normal.")])])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"code-block"},[a("span",{staticClass:"function-name"},[e._v("multi_core_function(peak_data, peak_intersect_data, peak_dictionary, peak_round_1, peak_round_2, bg_data,\n        bg_intersect_data, bg_dictionary, bg_round_1, bg_round_2, order)")]),e._v(" "),a("span",{staticClass:"function-description"},[e._v("-- Used to group all the four sample functions in one function in order to pass them to one CPU CORE.")]),e._v(" "),a("br"),e._v(" "),a("p",[e._v("@param peak_data: peak counting data reading from reading_file()")]),e._v(" "),a("p",[e._v("@param peak_intersect_data: peak intersect data reading from reading_file()")]),e._v(" "),a("p",[e._v("@param peak_dictionary: peak intersect dictionary data reading from reading_file().")]),e._v(" "),a("p",[e._v("@param peak_round_1: The number of first round to sample the peak data")]),e._v(" "),a("p",[e._v("@param peak_round_2: The number of second round to sample the peak data")]),e._v(" "),a("p",[e._v("@param bg_data: background counting data reading from reading_file()")]),e._v(" "),a("p",[e._v("@param bg_intersect_data: background intersect data reading from reading_file()")]),e._v(" "),a("p",[e._v("@param bg_dictionary: background intersect dictionary data reading from reading_file()")]),e._v(" "),a("p",[e._v("@param bg_round_1: The number of first round to sample the background data")]),e._v(" "),a("p",[e._v("@param bg_round_2: The number of second round to sample the background data")]),e._v(" "),a("p",[e._v("@param order: The order of this cell")])])}]};var b=a("VU/8")({data:function(){return{tableData:[{core:"1",total:"10k",sample:"2k",time:"602min 12s"},{core:"4",total:"10k",sample:"2k",time:"151min 05s"},{core:"8",total:"10k",sample:"2k",time:"78min 48s"}]}}},f,!1,function(e){a("kl/M")},"data-v-de174a58",null).exports,g={render:function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"example-block"},[t("div",{staticClass:"title"},[this._v("\n        Example\n    ")]),this._v(" "),t("el-divider")],1)},staticRenderFns:[]};var k=a("VU/8")(null,g,!1,function(e){a("ojWr")},"data-v-00129bfb",null).exports,C={render:function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"simulator-block"},[a("div",{staticClass:"title"},[e._v("\n        Simulator\n    ")]),e._v(" "),a("el-divider"),e._v(" "),a("div",{staticClass:"sub-title"},[e._v("\n        Illustration\n    ")]),e._v(" "),e._m(0),e._v(" "),a("el-divider"),e._v(" "),a("div",{staticClass:"sub-title"},[e._v("\n        Pre-processing        \n    ")]),e._v(" "),e._m(1),e._v(" "),a("el-divider"),e._v(" "),a("div",{staticClass:"sub-title"},[e._v("\n        Simulator        \n    ")]),e._v(" "),e._m(2),e._v(" "),a("el-divider")],1)},staticRenderFns:[function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"simulator-pic"},[t("img",{attrs:{src:a("FIkx")}})])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"pre-processing"},[a("p",[e._v("The input for preprocessing is the "),a("b",[e._v("bam files")]),e._v(" and the "),a("b",[e._v("narrow peaks")]),e._v(" \n            called using the ENCODE ATAC-seq pipeline (MACS2) for each cell type in the cell group.")]),e._v(" "),a("p",[e._v("SCAN-ATAC_Preprocessing.ipynb is the Jupyter Notebook for preprocessing the bam files. \n            It will output fragments with read coverage and reads overlapping with the fragments. ")]),e._v(" "),a("br"),e._v(" "),a("p",[e._v("The python script could be executed as follows:")]),e._v(" "),a("i",{staticStyle:{"padding-left":"2em",color:"#b4b4b4"}},[e._v("Make sure to have pysam==0.15.4, pandas==1.0.3, and matplotlib==3.1.1 installed")]),e._v(" "),a("div",{staticClass:"code-block"},[a("p",[e._v("python SCAN-ATAC_Preprocessing.py \\")]),e._v(" "),a("p",[e._v("-c <comma separated file prefixes for each cell type> \\")]),e._v(" "),a("p",[e._v("-i <directory containig the peak files with prefix and .narrowPeak suffix> \\")]),e._v(" "),a("p",[e._v("-j <directory containing the bam files with prefix and .bam suffix> \\")]),e._v(" "),a("p",[e._v("-e <custom configuration for bp length separating between foreground and background fragments> \\")]),e._v(" "),a("p",[e._v("-b <bp length for background fragment size> \\")]),e._v(" "),a("p",[e._v("-o <output directory>")])]),e._v(" "),a("p",[e._v("The output files are:")]),e._v(" "),a("p",[a("b",[e._v("*.peak_counts.bed")]),e._v(" - fragment with read coverage")]),e._v(" "),a("p",[a("b",[e._v("*.peak_intersect.bed")]),e._v(" - reads in the previous fragments")])])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"simulator"},[a("p",[e._v("Follow the example in run.sh to simulate one cell type.")]),e._v(" "),a("p",[a("b",[e._v("1. To compile with Intel C++ compiler:")])]),e._v(" "),a("p",{staticStyle:{"margin-left":"3em"}},[e._v("make weighted_sampling")]),e._v(" "),a("p",{staticStyle:{"margin-left":"3em"}},[e._v("make uniform_sampling")]),e._v(" "),a("br"),e._v(" "),a("p",[a("b",[e._v("2. Sample fragments without replacement:")])]),e._v(" "),a("p",[e._v("./weighted_sampling -f NKcell.peak_counts.bed -b bg_counts.bed -of")]),e._v(" "),a("p",[e._v("NKcell.foreground.sampled.bed -ob NKcell.background.sampled.bed -n 2000 -nv 0.5 -c 10000 ")]),e._v(" "),a("p",[a("b",[e._v("-s")]),e._v(" 0.6 -min 1000 -max 20000")]),e._v(" "),a("p",[a("b",[e._v("-f")]),e._v(" specifies foreground fragments")]),e._v(" "),a("p",[a("b",[e._v("-b")]),e._v(" specifies background fragments")]),e._v(" "),a("p",[a("b",[e._v("-of")]),e._v(" foreground output name")]),e._v(" "),a("p",[a("b",[e._v("-ob")]),e._v(" background output name")]),e._v(" "),a("p",[a("b",[e._v("-n")]),e._v(" number of fragments sampled (or the mean of the log-normal distribution of peak number) ")]),e._v(" "),a("p",[a("b",[e._v("-nv")]),e._v(" variance of fragments sampled for the log-normal distribution of peak number")]),e._v(" "),a("p",[a("b",[e._v("-c")]),e._v(" specifies the number of cells sampled for single-cell")]),e._v(" "),a("p",[a("b",[e._v("-s")]),e._v(" signal to noise ratio")]),e._v(" "),a("p",[a("b",[e._v("-min")]),e._v(" minimum fragments in a cell (only for the log-normal distribution mode)")]),e._v(" "),a("p",[a("b",[e._v("-max")]),e._v(" maximum fragments in a cell (only for the log-normal distribution mode)")]),e._v(" "),a("br"),e._v(" "),a("p",[a("b",[e._v("3. Sample reads:")])]),e._v(" "),a("p",[e._v("./uniform_sampling NKcell.peak_intersect.bed NKcell.foreground.sampled.bed NKcells.background.bed")]),e._v(" "),a("p",[e._v("./uniform_sampling bg_intersect.expanded.bed NKcell.background.sampled.bed NKcells.foreground.bed")]),e._v(" "),a("p",[e._v("cat NKcells.background.bed NKcells.foreground.bed > NKcells.bed")]),e._v(" "),a("p",[e._v("The script uniform_sampling takes the fragments sampled and finds the reads. It collects \n            the mapping in a dictionary, then outputs a reads for each dictionary entry. The samples \n            repeat for foreground and background, and the results should then be combined for all cells of that cell type. ")])])}]};var y=a("VU/8")(null,C,!1,function(e){a("lpB1")},"data-v-dc372bce",null).exports,w={render:function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"contact-block"},[t("div",{staticClass:"title"},[this._v("\n        Contact\n    ")]),this._v(" "),t("el-divider")],1)},staticRenderFns:[]};var S=a("VU/8")(null,w,!1,function(e){a("J1Xs")},"data-v-dc720962",null).exports;n.default.use(v.a);var x=new v.a({routes:[{path:"/",name:"Homepage",component:m},{path:"/Install",name:"Install",component:h},{path:"/Document",name:"Document",component:b},{path:"/Example",name:"Example",component:k},{path:"/Simulator",name:"Simulator",component:y},{path:"/Contact",name:"Contact",component:S}],scrollBehavior:function(e,t,a){if(e.hash)return{selector:e.hash}}}),E=(a("7t+N"),a("zL8q")),$=a.n(E);a("tvR6");n.default.use($.a);var T=a("mtWM"),D=a.n(T),A=a("NYxO");n.default.use(A.a),n.default.prototype.$http=D.a,n.default.config.productionTip=!1;var U=new A.a.Store({state:{},mutations:{},getters:{},actions:{}});new n.default({el:"#app",router:x,store:U,components:{App:p},template:"<App/>"})},Sowx:function(e,t){},jxV2:function(e,t){},"kl/M":function(e,t){},lpB1:function(e,t){},ojWr:function(e,t){},tvR6:function(e,t){},ub9N:function(e,t){}},["NHnr"]);
//# sourceMappingURL=app.240e1fd0b4c3e8adabe2.js.map